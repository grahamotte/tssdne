{"version":3,"sources":["store.js","App.js","index.js"],"names":["Planet","props","parent","color","mass","trail","x","y","xViewport","yViewport","vx","vy","ay","ax","convertViewport","v","dim","maxY","maxX","followPlanet","scale","update","planets","filter","o","forEach","other","dx","dy","d2","f","g","Math","sqrt","dt","push","this","log","takeRight","flatMap","decorate","observable","destroyed","action","radius","computed","trailViewport","Store","minX","minY","resize","window","innerWidth","innerHeight","Array","random","fill","setInterval","p","add","observer","width","store","height","map","w","wi","key","text","fontSize","fontFamily","fontStyle","pi","points","stroke","strokeWidth","onresize","event","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.3c6a36a5.chunk.js","sourcesContent":["import { action, computed, decorate, observable } from \"mobx\";\nimport { random, takeRight } from \"lodash\";\n\nclass Planet {\n  // const\n  parent = null;\n  color = \"#fff\";\n  mass = -1.0;\n\n  // movement\n  trail = [];\n  x = 0.0;\n  y = 0.0;\n  xViewport = 0.0;\n  yViewport = 0.0;\n  vx = 0.0;\n  vy = 0.0;\n  ay = 0.0;\n  ax = 0.0;\n\n  constructor(props) {\n    this.parent = props.parent;\n    this.color = props.color || this.color;\n    this.mass = props.mass || this.mass;\n    this.x = props.x || this.x;\n    this.y = props.y || this.y;\n    this.vx = props.vx || this.vx;\n    this.vy = props.vy || this.vy;\n  }\n\n  get radius() {\n    return Math.log(this.mass * 1.0e8);\n  }\n\n  convertViewport = (v, y) => {\n    const dim = y ? this.parent.maxY : this.parent.maxX;\n    const follow = this.parent.followPlanet[y ? \"y\" : \"x\"];\n\n    return (y ? -1 : 1) * (v - follow) * this.parent.scale + dim / 2;\n  };\n\n  get trailViewport() {\n    return takeRight(this.trail, 50).flatMap((x) => {\n      return [\n        this.convertViewport(x[0], false),\n        this.convertViewport(x[1], true),\n      ];\n    });\n  }\n\n  update = () => {\n    var ax = 0;\n    var ay = 0;\n\n    this.parent.planets\n      .filter((o) => o !== this)\n      .forEach((other) => {\n        const dx = other.x - this.x;\n        const dy = other.y - this.y;\n        const d2 = dx * dx + dy * dy;\n        const f = (this.parent.g * other.mass) / d2 / Math.sqrt(d2);\n        ax += f * dx;\n        ay += f * dy;\n      });\n\n    this.ax = ax;\n    this.ay = ay;\n    this.vx += this.ax * this.parent.dt;\n    this.vy += this.ay * this.parent.dt;\n    this.x += this.vx * this.parent.dt;\n    this.y += this.vy * this.parent.dt;\n    this.xViewport = this.convertViewport(this.x, false);\n    this.yViewport = this.convertViewport(this.y, true);\n    this.trail.push([this.x, this.y]);\n  };\n}\n\ndecorate(Planet, {\n  parent: observable,\n  color: observable,\n  trail: observable,\n  destroyed: observable,\n  mass: observable,\n  update: action,\n  radius: computed,\n  trailViewport: computed,\n  x: observable,\n  y: observable,\n  xViewport: observable,\n  yViewport: observable,\n  vx: observable,\n  vy: observable,\n  ax: observable,\n  ay: observable,\n});\n\nclass Store {\n  g = 40; // const\n  dt = 0.005; // days\n  scale = 120;\n  minX = 0;\n  maxX = 0;\n  minY = 0;\n  maxY = 0;\n\n  planets = [];\n  followPlanet = new Planet({ parent: this });\n\n  constructor() {\n    this.resize();\n\n    this.planets.push(\n      new Planet({\n        parent: this,\n        mass: 0.8,\n      })\n    );\n\n    new Array(random(2, 12)).fill(0).forEach(() => {\n      const x = random(0.6, 2, true);\n      const y = 0;\n\n      this.planets.push(\n        new Planet({\n          parent: this,\n          mass: random(0, 0.00001, true),\n          x: x,\n          y: y,\n          vx: 0,\n          vy: random(-3, -5, true),\n        })\n      );\n    });\n\n    this.followPlanet = this.planets[0];\n\n    setInterval(() => {\n      this.planets.forEach((p) => p.update());\n    }, 30);\n  }\n\n  resize = () => {\n    this.minX = 0;\n    this.maxX = window.innerWidth;\n    this.minY = 0;\n    this.maxY = window.innerHeight;\n  };\n}\n\ndecorate(Store, {\n  g: observable,\n  dt: observable,\n  scale: observable,\n  planets: observable,\n  followPlanet: observable,\n  resize: action,\n  add: action,\n});\n\nexport default new Store();\n","import \"mobx-react/batchingOptOut\";\n\nimport { Circle, Layer, Line, Rect, Stage, Text } from \"react-konva\";\n\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport store from \"./store\";\n\nexport default observer(() => {\n  return (\n    <Stage width={store.maxX} height={store.maxY}>\n      <Layer fill=\"#000\">\n        <Rect width={store.maxX} height={store.maxY} fill=\"black\" />\n        {[\"This\", \"Solar\", \"System\", \"Does\", \"Not\", \"Exist\"].map((w, wi) => (\n          <Text\n            key={wi}\n            text={w}\n            fill=\"#fff\"\n            fontSize={40}\n            y={store.maxY - 6 * 50 + wi * 50}\n            x={10}\n            fontFamily=\"Courier New\"\n            fontStyle=\"bold\"\n          />\n        ))}\n\n        {store.planets.map((p, pi) => {\n          return (\n            <Line\n              key={pi}\n              points={p.trailViewport}\n              stroke=\"#ddd\"\n              strokeWidth={1}\n            />\n          );\n        })}\n\n        {store.planets.map((p, pi) => {\n          return (\n            <Circle\n              key={pi}\n              x={p.xViewport}\n              y={p.yViewport}\n              radius={p.radius}\n              fill={p.color}\n            />\n          );\n        })}\n      </Layer>\n    </Stage>\n  );\n});\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\n\nwindow.onresize = (event) => store.resize();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}